<?php

function cipher_menu() {
    $items['cipher'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguements' => array('cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_success_page'] = array(
        'title' => 'Success',
        'page callback' => 'cipher_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function cipher_form() {
    $form['shift_value'] = array(
        '#title' => 'Enter a number value to shift',
        '#type' => 'textfield',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_integer_positive'),
    );
    $form['direction'] = array(
        '#title' => 'Enter which direction to shift',
        '#type' => 'textfield',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_direction'),
    );
    $form['phrase'] = array(
        '#title' => 'Enter a phrase',
        '#type' => 'textfield',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_phrase'),
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Cipherize!',
    );
    return $form;
}

function element_validate_phrase($element) {
    $valid_inputs = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');
    $letters = str_split(strtolower($element['value']));
    foreach($letters as $letter) {
        if (in_array($letter, $valid_inputs) == false) {
            form_error($element, t('The input received is not valid, please enter a phrase including valid letters of the alphabet'));
        }
    }
}

function element_validate_direction($element) {
    $valid_inputs = array('left', 'right');
    $direction_input = strtolower($element['value']);
        if (in_array($direction_input, $valid_inputs) == false) {
            form_error($element, t('The input received is not valid, please enter LEFT or RIGHT'));
        }
}

function cipher_form_submit($form, &$form_state) {
    $phrase = strtolower($form_state['values']['phrase']);
    $direction = strtolower($form_state['values']['direction']);
    $shift_value = $form_state['values']['shift_value'];
    $letter_array = str_split($phrase);
    $encoded_phrase = array();

    $alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');
    foreach ($letter_array as $letter) {
        if (in_array($letter, $alphabet)) {
            if ($direction == "right") {
                $index = array_search($letter, $alphabet) + $shift_value;
                if ($index > count($alphabet)) {
                    $index = $index % count($alphabet);
                    array_push($encoded_phrase, $alphabet[$index]);
                }
                else {
                    array_push($encoded_phrase, $alphabet[$index]);
                }
            }
            elseif (direction == "left") {
                $reversed_alphabet_array = array_reverse($alphabet);
                $letter_index = array_search($letter, $reversed_alphabet_array) + $shift_value;
                if ($index > count($alphabet)) {
                    $index = $index % count($alphabet);
                    array_push($encoded_phrase, $reversed_alphabet_array[$index]);
                }
                else {
                    array_push($encoded_phrase, $reversed_alphabet_array[$index]);
                }
            }
        } else {
              array_push($encoded_phrase, $letter);
        }
    }
    $output = implode($encoded_phrase);
    $_SESSION['encoded_phrase'] = $output;
    $form_state['redirect'] = 'cipher_success_page';
}

function cipher_success() {
    if (!empty($_SESSION)) {
        $encoded_phrase = $_SESSION['encoded_phrase'];
        $output = "Your encoded phrase is: <p>$encoded_phrase</p>";

    }
    else {
        $output = "What did you mess up this time?!";
    }
    return $output;
}
